language: java
jdk: oraclejdk8
services:
- docker

before_install:
- sudo service mysql stop
- docker pull takimatraining/devops-training-db
- docker run -d -p 127.0.0.1:3306:3306 takimatraining/devops-training-db

#prepare deploy
- openssl aes-256-cbc -K $encrypted_7033f886b6f6_key -iv $encrypted_7033f886b6f6_iv
  -in travis_deploy_rsa.enc -out /tmp/travis_deploy_rsa -d
  
- eval "$(ssh-agent -s)"
- ssh-add /tmp/travis_deploy_rsa
- echo -e "Host $SERVER_HOST\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

script:
- mvn verify
- |
  mvn clean install sonar:sonar \
  -Dsonar.projectKey=sampleApplicationStudents \
  -Dsonar.organization=pcadorel-github \
  -Dsonar.host.url=https://sonarcloud.io \
  -Dsonar.login=$SONAR_TOKEN
  
- echo $DOCKER_PASS
- docker login -u $DOCKER_USER -p $DOCKER_PASS
- export TAG=`if [ "$TRAVIS_BRANCH" == "master" ]; then echo "latest"; else echo $TRAVIS_BRANCH;
  fi`
- export IMAGE_NAME=$DOCKER_USER/sample-application
- docker build -t $IMAGE_NAME:$TRAVIS_COMMIT .
- docker tag $IMAGE_NAME:$TRAVIS_COMMIT $IMAGE_NAME:$TAG
- docker push $IMAGE_NAME:$TAG

deploy:
  provider: script
  script: ssh -i /tmp/travis_deploy_rsa $DEPLOY_USER@$SERVER_HOST "sudo docker pull $IMAGE_NAME:$TAG && sudo docker rm -f app || true && sudo docker run -d --network net -p 80:8080 --name app $IMAGE_NAME:$TAG"
  on:
    branch: master
    


notifications:
  email:
    on_failure: always

cache:
  directories:
  - "$HOME/.m2/repository"

env:
  - DEPLOY_USER: training
  - SERVER_HOST: paul-cadorel.takima.io
  global:
  - secure: Q8VmCTTexlQhOsq9rKrGshUCo/OfGMYkE85QEttUcZFEuSb5ybA2uONUT9Gm7XdbQCVU5VoScBdVlhK2pzZQJQDmeK4M/OVgPW6KR3Q/fE8/oNNnzMRABzrkLu7hOQLST67w2MnzV1WWDUIzMaVD0KF1h5pO/zWETimt06cikBOO3AwS/P8IfuUmv3OFsETAmjpvABfbhfVU+4tn7Si0cIzBRnkViWH0MTxkkVoNzf8Bbqrs6sJfVPgBCLQkO0ABHBa1uUUzRvx2jj+6HiaUHH5g3SDpKyBuzC5rXA//vfDuotoBxv0/oNDZx/oGbvVmWZd+aI9fuMiL/Mhdw4J36kUzGge1ANtsh/PhHqg1werzA4zc615OcYCyHSVsTqNCl/IwSmeEjVa8lqC7z0vcL/fXXP0WtMDDFmNqix4MDCnEj5TvaWXTSAVI7n7ppNS0KxqRoq7VskVyCRJWusKG696mGZ6Jvedhv6IDEXvF0wJOWJYdfe2PmI4S1u99gd6NGUwcyXUkUeO5MGGxQAWqOU3a7UPW6YhSKqt59sgBtBwhdnC+A8dBxl2SydQLKk4H9Q5TMSNAoctm0o15GJOoaK98cWOdyGA0FmsHTa4F7rNvWD+JIDjRC77l+/SuvODsO7RQAchvRF7iEEWkSHHSsKoMenehr66qKunoOObqO+I=
  - secure: GI5GroZI6nd4z8gOrH6m1EStUT7yuH4CxXNmHODPSysxKbiP0RXrkIog6toIWjT59Ip6f98Z5KEH6+9K6RWe4bYGOoqFObLjB0a84Ph1u234NwhabYnJzoU4uRBwik5FpZJmpKk4IDdm7ZLXc1zS6ffgTDIt1BwfiN01Qabn4+KBt98LBfySjtVKz3Sk+1VC5SXH8sYCcbkrROH/UZn5MKylB6yrI7qp5XFQHRSzmfEPA0+WL+1bcknaF8aJqTLNHz72ozSuih0HAjGY+3taw31pOcRasCWND7Cao/xXu/BsGzy/0oILf2HmV7+3kfYo7cQifMN9YYhT4L+467r7B9YGOpVZ5t6+Y/XCJ90lCf6RAqJJwjYBJmap/1SQgx1AJg0FR70rhPK29w485qgkYh8NJclSTsfhLGYOMLI6IICm0DA6ntnNntCvOoN02Pt0fm2IEtdhERM1ZJnkfrqf3nqAhcV4k7QyYAFK5KzfdILFG9hgqglTO46vTucDWCthDr/nUVXWjonidUGwxYUnwsicMqDiCM1wG//ROKbkuMCsqe71G9W1ttdElsclExt9UV9IRXN0erWBytUMuOZfw4jcsyrX6GxO6tN/JyBrFWTOx2JXLSiRthLcU2dFLYOMW5ueWNqv08qX4iMTRa2+MFWe7QOTG7Nr4HztZIsAjsc=
  - secure: F5IyxlDvs5ZcgTINIwNrVpHrE62Ab/5p5T9OUrmwEyFVq4aJYHFRG3Huqjdxhb3yMQthf0BHMTeczLCdZPfCute8V1rHBm/HyD3D/xRbdzsW875DzKozmBWEqiFZOjOuptuapcMuSR5YLp7HUI2Cq02KqZFfzG0sXHIjUg4mcf6tg8Z5B7UrOhmq0hPlnvaT9wEISdRv/UwAfxm9wpVxgV60xTSEJ4HYnb+nN8HEk/nU7NgAhr43e2w5btZ7CpzfHUF2YsFxZq9bYDxqNpXAc4KUJ1ikt9G69TvcL5i9lC25u33mjY/8PQnzsSLSLc+5Nt4NlgijD0uBB0OukYtsyRT5Ph4/BMsTi9xwsiGCw2MRKgjOXtI9SMFYBUFWB0cakmeImxPI+AHk8Ow1ixevsOvSClGskD8CNfvDMTyUcCv0Czt7zcyBBfuvKXqO0EiSwflxCnTlOzSuuXuX0EPiP3eNsjY3dO31+uDSXg/ZQw9HOWEglMHMwv65oxkd6Br7YlXX+Kr5uSS5pevpGNl4jX23ZdejOnUFcGetuReOjizvFzZ/Q0iDBAoqepPRNSxAZV7qjWHZr8UiC27VHU/8qWn9lfslJuwI77q9mcLrmRNTLJCnOPSUkNQesWA3jzvpwbDch4k2979+z7Gv9f0h4m5wCta8e03UjfXdGuluDOk=
